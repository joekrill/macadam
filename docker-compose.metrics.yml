# Extends docker-compose.yml, adding metrics gathering and reporting support
# using Prometheus and Grfafana
# Usage: `docker compose -f docker-compose.yml -f docker-compose.metrics.yml up`

version: "3.8"

x-service-defaults: &service-defaults
  restart: unless-stopped
  networks:
    - sass-starter-net

networks:
  sass-starter-net:

volumes:
  prometheus_data: {}
  grafana_data: {}

services:
  prometheus:
    <<: *service-defaults
    image: prom/prometheus:v2.28.0
    volumes:
      - ./services/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    <<: *service-defaults
    image: grafana/grafana:7.5.9
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./services/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin}
      - GF_USERS_ALLOW_SIGN_UP=false
    labels:
      org.label-schema.group: "monitoring"

  # alertmanager:
  #   image: prom/alertmanager:v0.21.0
  #   volumes:
  #     - ./services/alertmanager:/etc/alertmanager
  #   command:
  #     - "--config.file=/etc/alertmanager/config.yml"
  #     - "--storage.path=/alertmanager"
  #   restart: unless-stopped
  #   # expose:
  #   #   - 9093
  #   labels:
  #     org.label-schema.group: "monitoring"

  # nodeexporter:
  #   image: prom/node-exporter:v1.0.1
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - "--path.procfs=/host/proc"
  #     - "--path.rootfs=/rootfs"
  #     - "--path.sysfs=/host/sys"
  #     - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
  #   restart: unless-stopped
  #   labels:
  #     org.label-schema.group: "monitoring"

  postgres-exporter:
    <<: *service-defaults
    image: wrouesnel/postgres_exporter:v0.8.0
    environment:
      DATA_SOURCE_NAME: postgres://saas-starter:saas-starter-pass@postgres:5432/saas-starter?sslmode=disable
    labels:
      org.label-schema.group: "monitoring"
