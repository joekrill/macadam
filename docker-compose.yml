version: "3.8"

networks:
  sass-starter-net:

volumes:
  postgres_data:
  mail_data:
  prometheus_data:
  grafana_data:
  clickhouse_data:
  geoip_data:

x-service-defaults: &service-defaults
  restart: unless-stopped
  networks:
    - sass-starter-net

x-kratos-defaults: &kratos-defaults
  <<: *service-defaults
  image: oryd/kratos:v0.9
  depends_on:
    - postgres
  environment:
    COURIER_SMTP_CONNECTION_URI: smtp://mail:1025/?disable_starttls=true
    DSN: postgres://kratos:kratos!@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    SQA_OPT_OUT: "true"
    LOG_FORMAT: text
    LOG_LEVEL: debug # trace
    LOG_LEAK_SENSITIVE_VALUES: "true"
    SESSION_COOKIE_NAME: macadam_session_dev
    SECRETS_COOKIE: PLEASE-CHANGE-ME-I-AM-VERY-INSECURE
    SERVE_PUBLIC_BASE_URL: https://localtest.me/kratos/public
    SELFSERVICE_DEFAULT_BROWSER_RETURN_URL: https://localtest.me
    SELFSERVICE_ALLOWED_RETURN_URLS: https://localtest.me,http://localtest.me
    SELFSERVICE_FLOWS_ERROR_UI_URL: https://localtest.me/auth-error
    SELFSERVICE_FLOWS_SETTINGS_UI_URL: https://localtest.me/settings
    SELFSERVICE_FLOWS_RECOVERY_UI_URL: https://localtest.me/account/recover
    SELFSERVICE_FLOWS_VERIFICATION_UI_URL: https://localtest.me/account/verify
    SELFSERVICE_FLOWS_VERIFICATION_AFTER_DEFAULT_BROWSER_RETURN_URL: https://localtest.me
    SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL: https://localtest.me
    SELFSERVICE_FLOWS_LOGIN_UI_URL: https://localtest.me/login
    SELFSERVICE_FLOWS_REGISTRATION_UI_URL: https://localtest.me/signup
    SELFSERVICE_METHODS_WEBAUTHN_CONFIG_RP_ID: localtest.me
  volumes:
    - ./services/kratos/config:/etc/config/kratos
    - ./services/kratos/templates:/conf/courier-templates

x-api-server-defaults: &api-server-defaults
  <<: *service-defaults
  image: node:18.9
  command: ["yarn", "workspace", "api-server", "run", "migrate:up"]
  working_dir: /var/macadam
  depends_on:
    - postgres
  restart: on-failure
  environment:
    DB_URL: postgresql://macadam:macadam!@postgres:5432/macadam
    KRATOS_DB_URL: postgresql://macadam:macadam!@postgres:5432/kratos
    KRATOS_ADMIN_URL: http://kratos:4434/
    KRATOS_PUBLIC_URL: http://kratos:4433/
    NODE_ENV: development
    PORT: 4000
    REDIS_URL: redis://redis:6380/0
    # Key should matchÂ API_PROJECT_KEY in `seed_macadam.py` with dashes stripped
    SENTRY_DSN: https://31e5d0461ecc46ce9f32af55e9f4af88@glitchtip.localtest.me/2
    # If we tunnel glitchtip requests, make sure they are mapped to the correct internal URL
    SENTRY_TUNNELABLE_DSNS: "https://239d589a58d24675be8159b19718b22e@glitchtip.localtest.me/1::http://glitchtip.localtest.me/1"
    SMTP_MAIL_TO: contact@macadam.com
    SMTP_URI: smtp://mail:1025/?disable_starttls=true
  volumes:
    - type: bind
      source: .
      target: /var/macadam

services:
  caddy:
    <<: *service-defaults
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      # This will allow us to more easily access the autogenerated SSL certs.
      - ./tmp/caddy:/data/caddy
      - type: bind
        source: ./services/caddy/Caddyfile
        target: /etc/caddy/Caddyfile

  postgres:
    <<: *service-defaults
    image: postgres:14
    # For postgis:
    # image: postgis/postgis:14-master
    # Uncomment to expost postgres directly
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: macadam
      POSTGRES_PASSWORD: macadam!
      POSTGRES_DB: macadam
    volumes:
      - ./services/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres_data:/var/lib/postgresql

  pgweb:
    <<: *service-defaults
    image: sosedoff/pgweb
    environment:
      DATABASE_URL: postgres://macadam:macadam!@postgres:5432/macadam?sslmode=disable

  redis:
    <<: *service-defaults
    image: redis

  kratos-migrate:
    <<: *kratos-defaults
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure

  kratos:
    <<: *kratos-defaults
    command: serve -c /etc/config/kratos/kratos.yml --dev
    depends_on:
      - kratos-migrate
    # ports:
    #   - "4434:4434"
    #   - "4433:4433"

  kratos-courier:
    <<: *kratos-defaults
    command: courier watch  --expose-metrics-port 4434 -c /etc/config/kratos/kratos.yml
    restart: on-failure
    depends_on:
      - kratos-migrate

  mail:
    <<: *service-defaults
    build:
      context: https://github.com/maildev/maildev.git
    environment:
      MAILDEV_MAIL_DIRECTORY: /home/node/test
    volumes:
      # mail_data has to be mounted in a directory that is owned by the
      # `node` user defined in the maildev Dockerfile, otherwise it won't have
      # write permission to the directory.
      - mail_data:/home/node/test

  api-server-migrate:
    <<: *api-server-defaults
    command: ["yarn", "workspace", "api-server", "run", "migrate:up"]
    restart: on-failure

  api-server:
    <<: *api-server-defaults
    command: ["yarn", "workspace", "api-server", "run", "start:dev"]
    depends_on:
      - api-server-migrate
    # Uncomment to expose api-server directly
    # ports:
    #   - 4000:4000

  client-web:
    <<: *service-defaults
    # Uncomment to expose client-web directly
    # ports:
    #   - 3000:3000
    command: ["yarn", "workspace", "client-web", "run", "start:legacy"]
    environment:
      # Key should match WEB_PROJECT_KEY in `seed_macadam.py` with dashes stripped
      REACT_APP_SENTRY_DSN: "https://239d589a58d24675be8159b19718b22e@glitchtip.localtest.me/1"
      REACT_APP_SENTRY_TUNNEL: "/api/v1/monitor"
      REACT_APP_PLAUSIBLE_HOST: https://plausible.localtest.me
      DISABLE_ESLINT_PLUGIN: "true"
      WDS_SOCKET_PORT: 443
    build:
      context: .
      dockerfile: ./packages/client-web/dev.Dockerfile
    volumes:
      - type: bind
        source: .
        target: /var/macadam

  client-web-storybook:
    <<: *service-defaults
    profiles: ["storybook"]
    ports:
      - 6006:6006
    build:
      context: .
      dockerfile: ./packages/client-web/dev.Dockerfile
    command: ["yarn", "workspace", "client-web", "run", "storybook"]
    volumes:
      - type: bind
        source: .
        target: /var/macadam

  # Used as a general purpose endpoint to "swallow" requests, for example we
  # point our glitchtip URL to this when we don't have an actual glitchtip
  # service running.
  echo:
    <<: *service-defaults
    image: jmalloc/echo-server
    environment:
      PORT: 80

  prometheus:
    <<: *service-defaults
    profiles: ["metrics"]
    image: prom/prometheus:v2.28.0
    volumes:
      - ./services/prometheus:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--storage.tsdb.retention.time=200h"
      - "--web.enable-lifecycle"
    labels:
      org.label-schema.group: "monitoring"

  grafana:
    <<: *service-defaults
    profiles: ["metrics"]
    image: grafana/grafana:8.2.0
    depends_on:
      - prometheus
    volumes:
      - grafana_data:/var/lib/grafana
      - ./services/grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER:-admin}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD:-admin!}
      - GF_USERS_ALLOW_SIGN_UP=false
    labels:
      org.label-schema.group: "monitoring"

  # alertmanager:
  #   profiles: ["metrics"]
  #   image: prom/alertmanager:v0.21.0
  #   volumes:
  #     - ./services/alertmanager:/etc/alertmanager
  #   command:
  #     - "--config.file=/etc/alertmanager/config.yml"
  #     - "--storage.path=/alertmanager"
  #   restart: unless-stopped
  #   # expose:
  #   #   - 9093
  #   labels:
  #     org.label-schema.group: "monitoring"

  # nodeexporter:
  #   profiles: ["metrics"]
  #   image: prom/node-exporter:v1.0.1
  #   volumes:
  #     - /proc:/host/proc:ro
  #     - /sys:/host/sys:ro
  #     - /:/rootfs:ro
  #   command:
  #     - "--path.procfs=/host/proc"
  #     - "--path.rootfs=/rootfs"
  #     - "--path.sysfs=/host/sys"
  #     - "--collector.filesystem.ignored-mount-points=^/(sys|proc|dev|host|etc)($$|/)"
  #   restart: unless-stopped
  #   labels:
  #     org.label-schema.group: "monitoring"

  postgres-exporter:
    <<: *service-defaults
    profiles: ["metrics"]
    image: wrouesnel/postgres_exporter:v0.8.0
    environment:
      DATA_SOURCE_NAME: postgres://macadam:macadam!@postgres:5432/macadam?sslmode=disable
    labels:
      org.label-schema.group: "monitoring"

  clickhouse:
    <<: *service-defaults
    profiles: ["analytics"]
    # image: yandex/clickhouse-server:21.3
    # Use this image if running on ARM64 (i.e. Mac M1) until a multi-arch image
    # is available from yandex: https://github.com/ClickHouse/ClickHouse/issues/22222
    image: altinity/clickhouse-server:21.6.1.6734-testing-arm
    environment:
      CLICKHOUSE_DB: plausible
    volumes:
      - clickhouse_data:/var/lib/clickhouse
      - ./services/clickhouse/clickhouse-config.xml:/etc/clickhouse-server/config.d/logging.xml:ro
      - ./services/clickhouse/clickhouse-user-config.xml:/etc/clickhouse-server/users.d/logging.xml:ro
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  geoip:
    <<: *service-defaults
    profiles: ["analytics"]
    image: maxmindinc/geoipupdate
    environment:
      GEOIPUPDATE_EDITION_IDS: GeoLite2-Country
      GEOIPUPDATE_FREQUENCY: 168 # update every 7 days
      GEOIPUPDATE_ACCOUNT_ID:
      GEOIPUPDATE_LICENSE_KEY:
    volumes:
      - geoip_data:/usr/share/GeoIP

  plausible:
    <<: *service-defaults
    profiles: ["analytics"]
    image: plausible/analytics:v1.3
    command: sh -c "sleep 10 && /entrypoint.sh db migrate && /entrypoint.sh db init-admin && /entrypoint.sh run"
    depends_on:
      - postgres
      - clickhouse
      - mail
      - geoip
    environment:
      ADMIN_USER_EMAIL: macadam@example.com
      ADMIN_USER_NAME: macadam
      ADMIN_USER_PWD: macadam!
      DISABLE_AUTH: "true"
      BASE_URL: https://plausible.localtest.me
      SECRET_KEY_BASE: USbJSimhObRflMa+UC8iku9Iqhpr1RtPeLaEl8uuJpI44X+zoha1L9Jeo/7dgKUMZtMTGnDTsgYfYxcQ40ZSAA==
      DATABASE_URL: postgresql://plausible:plausible!@postgres:5432/plausible
      CLICKHOUSE_DATABASE_URL: http://clickhouse:8123/plausible
      SMTP_HOST_ADDR: mail
      SMTP_HOST_PORT: 1025
      GEOLITE2_COUNTRY_DB: /geoip/GeoLite2-Country.mmdb
    volumes:
      - geoip_data:/geoip:ro

  glitchtip-migrate:
    <<: *service-defaults
    profiles: ["error-tracking"]
    image: glitchtip/glitchtip
    depends_on:
      - postgres
      - redis
    command: bash -c "./manage.py migrate && ./manage.py seed_macadam"
    restart: on-failure
    volumes:
      - ./services/glitchtip/commands/seed_macadam.py:/code/glitchtip/management/commands/seed_macadam.py
    environment:
      DATABASE_URL: postgresql://glitchtip:glitchtip!@postgres:5432/glitchtip
      SECRET_KEY: change_me

  glitchtip-web:
    <<: *service-defaults
    profiles: ["error-tracking"]
    # NOTE: On AMD64 you will be spamemd with messages like:
    # "*** uWSGI listen queue of socket ":8000" (fd: 3) full !!! (26472960/64) ***"
    # I can't figure out how to fix this. Rebuilding the docker image fails on
    # AMD64 when installing symbolic (see: https://github.com/getsentry/symbolic/issues/76).
    # There seems to be no other adverse effects, though, so I've given up on this for now.
    image: glitchtip/glitchtip
    depends_on:
      - glitchtip-migrate
    deploy:
      resources:
        limits:
          cpus: "0.001"
          memory: 512M
        reservations:
          cpus: "0.0001"
          memory: 256M
    environment:
      DATABASE_URL: postgresql://glitchtip:glitchtip!@postgres:5432/glitchtip
      SECRET_KEY: change_me
      EMAIL_URL: smtp://mail:1025/?skip_ssl_verify=true
      DEFAULT_FROM_EMAIL: glitchtip@example.com
      GLITCHTIP_DOMAIN: https://glitchtip.localtest.me
      PORT: 8000
      ENABLE_OPEN_USER_REGISTRATION: "true"

  glitchtip-worker:
    <<: *service-defaults
    profiles: ["error-tracking"]
    image: glitchtip/glitchtip
    command: celery -A glitchtip worker -B -l INFO
    depends_on:
      - glitchtip-migrate
    environment:
      DATABASE_URL: postgresql://glitchtip:glitchtip!@postgres:5432/glitchtip
      SECRET_KEY: change_me
      EMAIL_URL: smtp://mail:1025/?skip_ssl_verify=true
      GLITCHTIP_DOMAIN: https://glitchtip.localtest.me
