# Base docker compose definition
# Ideal for development work
version: "3.8"

networks:
  sass-starter-net:

volumes:
  caddy_data:
  postgres_data:
  mail_data:

x-service-defaults: &service-defaults
  restart: unless-stopped
  networks:
    - sass-starter-net

x-kratos-defaults: &kratos-defaults
  <<: *service-defaults
  image: oryd/kratos:v0.8.0
  depends_on:
    - postgres
  environment:
    COURIER_SMTP_CONNECTION_URI: smtp://mail:1025/?disable_starttls=true
    DSN: postgres://kratos:kratos!@postgres:5432/kratos?sslmode=disable&max_conns=20&max_idle_conns=4
    SQA_OPT_OUT: "true"
    LOG_FORMAT: text
    LOG_LEVEL: debug # trace
    LOG_LEAK_SENSITIVE_VALUES: "true"
    SESSION_COOKIE_NAME: macadam_session_dev
    SECRETS_COOKIE: PLEASE-CHANGE-ME-I-AM-VERY-INSECURE
    SERVE_PUBLIC_BASE_URL: https://localtest.me/kratos/public
    SELFSERVICE_DEFAULT_BROWSER_RETURN_URL: https://localtest.me
    SELFSERVICE_WHITELISTED_RETURN_URLS: https://localtest.me,http://localtest.me
    SELFSERVICE_FLOWS_ERROR_UI_URL: https://localtest.me/auth/error
    SELFSERVICE_FLOWS_SETTINGS_UI_URL: https://localtest.me/settings
    SELFSERVICE_FLOWS_RECOVERY_UI_URL: https://localtest.me/auth/recovery
    SELFSERVICE_FLOWS_VERIFICATION_UI_URL: https://localtest.me/auth/verification
    # SELFSERVICE_FLOWS_VERIFICATION_AFTER_DEFAULT_BROWSER_RETURN_URL: https://localtest.me/xxx
    SELFSERVICE_FLOWS_LOGOUT_AFTER_DEFAULT_BROWSER_RETURN_URL: https://localtest.me
    SELFSERVICE_FLOWS_LOGIN_UI_URL: https://localtest.me/auth/login
    SELFSERVICE_FLOWS_REGISTRATION_UI_URL: https://localtest.me/auth/registration
    SELFSERVICE_METHODS_WEBAUTHN_CONFIG_RP_ID: localtest.me
  volumes:
    - ./services/kratos:/etc/config/kratos

x-api-server-defaults: &api-server-defaults
  <<: *service-defaults
  image: node:16.10
  command: ["yarn", "workspace", "api-server", "run", "migrate:up"]
  working_dir: /var/macadam
  depends_on:
    - postgres
  restart: on-failure
  environment:
    DB_URL: postgresql://macadam:macadam!@postgres:5432/macadam
    REDIS_URL: redis://redis:6380/0
    PORT: 4000
    SENTRY_DSN: https://31e5d0461ecc46ce9f32af55e9f4af88@glitchtip.localtest.me/2
    KRATOS_PUBLIC_URL: http://kratos:4433/
    KRATOS_ADMIN_URL: http://kratos:4434/
  volumes:
    - type: bind
      source: .
      target: /var/macadam

services:
  caddy:
    <<: *service-defaults
    image: caddy:2
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - caddy_data:/data
      - type: bind
        source: ./services/caddy/Caddyfile
        target: /etc/caddy/Caddyfile

  postgres:
    <<: *service-defaults
    image: postgres:14
    # image: postgis/postgis:13-3.1 # Does not work with arm yet.
    # Uncomment to expost postgres directly
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_HOST_AUTH_METHOD: "trust"
      POSTGRES_USER: macadam
      POSTGRES_PASSWORD: macadam!
      POSTGRES_DB: macadam
    volumes:
      - ./services/postgres/init-db.sh:/docker-entrypoint-initdb.d/init-db.sh
      - postgres_data:/var/lib/postgresql

  pgweb:
    <<: *service-defaults
    image: sosedoff/pgweb
    environment:
      DATABASE_URL: postgres://macadam:macadam!@postgres:5432/macadam?sslmode=disable

  redis:
    <<: *service-defaults
    image: redis

  kratos-migrate:
    <<: *kratos-defaults
    command: -c /etc/config/kratos/kratos.yml migrate sql -e --yes
    restart: on-failure

  kratos:
    <<: *kratos-defaults
    command: serve -c /etc/config/kratos/kratos.yml --dev
    depends_on:
      - kratos-migrate
    # ports:
    #   - "4434:4434"
    #   - "4433:4433"

  kratos-courier:
    <<: *kratos-defaults
    command: courier watch  --expose-metrics-port 4434 -c /etc/config/kratos/kratos.yml
    restart: on-failure
    depends_on:
      - kratos-migrate

  mail:
    <<: *service-defaults
    build:
      context: https://github.com/maildev/maildev.git
    environment:
      MAILDEV_MAIL_DIRECTORY: /home/node/test
    volumes:
      # mail_data has to be mounted in a directory that is owned by the
      # `node` user defined in the maildev Dockerfile, otherwise it won't have
      # write permission to the directory.
      - mail_data:/home/node/test

  api-server-migrate:
    <<: *api-server-defaults
    command: ["yarn", "workspace", "api-server", "run", "migrate:up"]
    restart: on-failure

  api-server:
    <<: *api-server-defaults
    command: ["yarn", "workspace", "api-server", "run", "start:dev"]
    depends_on:
      - api-server-migrate
    # Uncomment to expose api-server directly
    # ports:
    #   - 4000:4000

  client-web:
    <<: *service-defaults
    # Uncomment to expose client-web directly
    # ports:
    #   - 3000:3000
    environment:
      REACT_APP_SENTRY_DSN: "https://239d589a58d24675be8159b19718b22e@glitchtip.localtest.me/1"
    build:
      context: .
      dockerfile: ./packages/client-web/dev.Dockerfile
    volumes:
      - type: bind
        source: .
        target: /var/macadam
